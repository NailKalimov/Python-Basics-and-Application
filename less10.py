"""
Есть список целых, заполненный случайными числами.
На основании данных этого массива нужно:
Создать список целых, содержащий только четные числа из первого списка;
Создать список целых, содержащий только нечетные числа из первого списка;
Создать список целых, содержащий только отрицательные числа из первого списка;
Создать список целых, содержащий только положительные числа из первого списка.
"""

"""
Напишите программу определяющую является ли строка палиндромом
Формат ввода
Вводится строка.
Формат вывода
Если введённая строка относится к палиндрому, то вывести YES, а иначе — NO.
Примечание
При проверке не обращайте внимания на регистр и пробелы.
Пример 1
Ввод
А роза упала на лапу Азора
Вывод
YES
Пример 2
Ввод
Мама мыла раму
Вывод
NO
"""


"""
Напишите программу, которая производит вычисление выражения, записанного в обратной польской нотации (ОПН).

В ОПН нет ни скобок, ни приоритета операторов («умножение раньше сложения»).

Чтобы прочитать выражение, записанное в таком формате, нужно просматривать выражение строго последовательно. Вводимые
значения последовательно добавляются в стек. Когда встречается символ операции, то из стека извлекаются последние
положенные туда значения, с ними проделывается эта операция и результат возвращается в стек.

Если для операции важен порядок значений, с которыми она производится, то первым идёт число, лежавшее в стеке глубже. В
частности, если операция — вычитание, то из предпоследнего числа в стеке вычитается последнее, а не наоборот.

Изначально стек пустой, в результате полного вычисления выражения в нём должно остаться одно значение — результат
вычислений.

Первый пример следует читать так: в стек последовательно добавляются значения 7 2 3, а затем встречаем знак операции *.
Тогда значения 2 и 3 извлекаются, перемножаются, результат 6 кладётся обратно в стек. Следующий знак извлекает из стека
два оставшихся в нём значения 7 и 6, вычитает одно из другого и кладёт результат снова в стек. Выражение закончилось, в
стеке одно число — 1, это и есть результат вычисления.

Формат ввода
Вводится одна строка, содержащая разделённые пробелами целые числа и знаки операций +, -, *, которые вместе составляют
корректное выражение в обратной польской нотации.

Формат вывода
Выводится одно целое число — результат вычисления выражения.
Пример 1
Ввод
7 2 3 * -
Вывод
1
Пример 2
Ввод
10 15 - 7 *
Вывод
-35
"""
# Вводим строку с выражением в ОПН
expression = input("Введите выражение в ОПН: ")
# Создаем пустой стек
stack = []

# Разделяем выражение на числа и операции
for token in expression.split():
    if token.isdigit():
        # Если токен является числом, добавляем его в стек
        stack.append(int(token))
    else:
        # Иначе выполняем операцию с последними двумя числами в стеке
        operand2 = stack.pop()
        operand1 = stack.pop()

        if token == '+':
            result = operand1 + operand2
        elif token == '-':
            result = operand1 - operand2
        else:  # token == '*'
            result = operand1 * operand2

        # Добавляем результат обратно в стек
        stack.append(result)

# Вычисляем результат выражения
result = stack[0]
# Печатаем результат
print("Результат вычисления выражения:", result)
